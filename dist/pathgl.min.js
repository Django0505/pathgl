function init(t){return initContext(t),initShaders(ctx),override(t),ctx}function override(t){return extend(t,{appendChild:svgDomProxy,querySelectorAll:querySelectorAll,querySelector:querySelector})}function compileShader(t,r){var e=ctx.createShader(t);if(ctx.shaderSource(e,r),ctx.compileShader(e),!ctx.getShaderParameter(e,ctx.COMPILE_STATUS))throw new Error(ctx.getShaderInfoLog(e));return e}function initShaders(){var t=compileShader(ctx.VERTEX_SHADER,pathgl.vertex),r=compileShader(ctx.FRAGMENT_SHADER,pathgl.fragment);return program=ctx.createProgram(),ctx.attachShader(program,t),ctx.attachShader(program,r),ctx.linkProgram(program),rgb=ctx.getUniformLocation(program,"rgb"),ctx.getProgramParameter(program,ctx.LINK_STATUS)?(ctx.useProgram(program),program.vertexPositionLoc=ctx.getAttribLocation(program,"aVertexPosition"),ctx.enableVertexAttribArray(program.vertexPositionLoc),program.pMatrixLoc=ctx.getUniformLocation(program,"uPMatrix"),ctx.uniformMatrix4fv(program.pMatrixLoc,0,pmatrix),void 0):console.error("Shader is broken")}function initContext(t){canv=t,ctx=t.getContext("webgl",{antialias:!1}),ctx&&(ctx.viewportWidth=t.width,ctx.viewportHeight=t.height)}function pathgl(t,r){return init(d3.select(t).node()),ctx?t:r}function horizontalLine(){}function verticalLine(){}function curveTo(){}function shortCurveTo(){}function quadraticBezier(){}function smoothQuadraticBezier(){}function elipticalArc(){}function group(t){var r=[];return twoEach(t,function(t,e){r.push([t,e])}),r}function parse(t){var r=addToBuffer(this);return r.length?render():(t.match(/[a-z][^a-z]*/gi).forEach(function(t,e,n){var o=methods[t[0].toLowerCase()],i=t.slice(1).trim().split(/,| /g);return[].push.apply(r.coords,group(i)),"closePath"==o.name&&n[e+1]?o.call(r,n[e+1]):(o.call?twoEach(i,o,r):console.error(o+" "+t[0]+" is not yet implemented"),void 0)}),void 0)}function moveTo(t,r){pos=[t,canv.height-r]}function closePath(t){subpathStart=pos,lineTo.apply(this,/m/i.test(t)?t.slice(1).trim().split(/,| /g):this.coords[0])}function lineTo(t,r){addLine.apply(this,pos.concat(pos=[t,canv.height-r]))}function svgDomProxy(t){return this instanceof svgDomProxy?(scene.push(this),this.tagName=t.tagName,this.id=id++,this.attr={stroke:"black"},void 0):new svgDomProxy(t)}function querySelector(){return scene[0]}function querySelectorAll(){return scene}function circle(t,r,e){for(var n=[],o=0;6.28>o;o++)n.push(Math.sin(o)*t+r,Math.cos(o)*t+e);return n}function drawPolygon(t){return}function flat(t){return flatten(t,!0,[])}function addToBuffer(t){return extend(t.path=[],{coords:[],id:t.id})}function addLine(t,r,e,n){var o=this.push(ctx.createBuffer())-1,i=[t,r,0,e,n,0];ctx.bindBuffer(ctx.ARRAY_BUFFER,this[o]),ctx.bufferData(ctx.ARRAY_BUFFER,new Float32Array(i),ctx.STATIC_DRAW),this[o].itemSize=3,this[o].numItems=i.length/3}function drawPath(t){setStroke(d3.rgb(t.attr.stroke));for(var r=t.path,e=0;e<r.length;e++)ctx.bindBuffer(ctx.ARRAY_BUFFER,r[e]),ctx.vertexAttribPointer(program.vertexPositionLoc,r[e].itemSize,ctx.FLOAT,!1,0,0),ctx.drawArrays(ctx.LINE_STRIP,0,r[e].numItems)}function render(){rerender=!0}function setStroke(t){ctx.uniform4fv(rgb,[t.r/256,t.g/256,t.b/256,1])}function extend(t,r){if(arguments.length>2)[].forEach.call(arguments,function(r){extend(t,r)});else for(var e in r)t[e]=r[e];return t}function twoEach(t,r,e){1==t.length&&r.call(e);for(var n=t.length-1,o=0;n>o;)r.call(e,t[o++],t[o++])}function noop(){}function projection(t,r,e,n,o,i){var a=r-t,c=n-e,u=i-o;return[2/a,0,0,0,0,2/c,0,0,0,0,-2/u,0,(t+r)/-a,(n+e)/-c,(i+o)/-u,1]}var id=0,scene=[],pos=[],pmatrix=projection(0,innerWidth/2,0,500,-1,1),canv,ctx,program,r,g,b,rerender;this.pathgl=pathgl;var methods={m:moveTo,z:closePath,l:lineTo,h:horizontalLine,v:verticalLine,c:curveTo,s:shortCurveTo,q:quadraticBezier,t:smoothQuadraticBezier,a:elipticalArc},subpathStart;svgDomProxy.prototype={r:function(){},cx:function(){},cy:function(){this.path.coords=circle(this.attr.r,this.attr.cx,this.attr.cy)},fill:function(){function t(t){return parseInt(t,10)}function r(t){return t}drawPolygon(this.path.coords.map(function(e){return e.map(t).filter(r)}).filter(function(t){return 2==t.length}))},d:function(t){return this.path&&extend(this.path,{coords:[],length:0}),t.match(/NaN/)?console.warn("path is invalid"):(parse.call(this,t),void 0)},stroke:function(){render()},"stroke-width":function(t){ctx.lineWidth(t)},getAttribute:function(t){return this.attr[t]},setAttribute:function(t,r){this.attr[t]=r,this[t](r)},removeAttribute:function(t){this.attr[t]=null},textContent:noop,removeEventListener:noop,addEventListener:noop};var circ=extend(Object.create(svgDomProxy),{r:"",cx:"",cy:""}),path=extend(Object.create(svgDomProxy),{d:""}),flatten=function(t,r,e){return r&&t.every(Array.isArray)?[].concat.apply(e,t):(d3.each(t,function(t){Array.isArray(t)||t.toString().match(/Arguments/)?r?[].push.apply(e,t):flatten(t,r,e):e.push(t)}),e)};d3.timer(function(){rerender&&(ctx.clear(ctx.COLOR_BUFFER_BIT),rerender=scene.forEach(drawPath))}),pathgl.supportedAttributes=["d","stroke","strokeWidth"],pathgl.fragment=["precision mediump float;","uniform vec4 rgb;","void main(void) {","  gl_FragColor = rgb;","}"].join("\n"),pathgl.vertex=["attribute vec3 aVertexPosition;","uniform mat4 uPMatrix;","void main(void) {","  gl_Position = uPMatrix * vec4(aVertexPosition, 1.0);","}"].join("\n"),d3.queue=function(t){var r=[].slice.call(arguments,1);d3.timer(function(){return t.apply(null,r),!0})};