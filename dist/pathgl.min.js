function init(t){return initContext(t),initShaders(ctx),override(t),ctx}function override(t){return extend(t,{appendChild:svgDomProxy,querySelectorAll:querySelectorAll,querySelector:querySelector})}function compileShader(t,r){var e=ctx.createShader(t);if(ctx.shaderSource(e,r),ctx.compileShader(e),!ctx.getShaderParameter(e,ctx.COMPILE_STATUS))throw new Error(ctx.getShaderInfoLog(e));return e}function initShaders(){var t=compileShader(ctx.VERTEX_SHADER,pathgl.vertex),r=compileShader(ctx.FRAGMENT_SHADER,pathgl.fragment);return program=ctx.createProgram(),ctx.attachShader(program,t),ctx.attachShader(program,r),ctx.linkProgram(program),rgb=ctx.getUniformLocation(program,"rgb"),ctx.getProgramParameter(program,ctx.LINK_STATUS)?(ctx.useProgram(program),program.vertexPositionLoc=ctx.getAttribLocation(program,"aVertexPosition"),ctx.enableVertexAttribArray(program.vertexPositionLoc),program.pMatrixLoc=ctx.getUniformLocation(program,"uPMatrix"),ctx.uniformMatrix4fv(program.pMatrixLoc,0,pmatrix),program.xyz=ctx.getUniformLocation(program,"xyz"),ctx.uniform3fv(program.xyz,[0,0,0]),void 0):console.error("Shader is broken")}function initContext(t){canv=t,ctx=t.getContext("webgl"),ctx&&(ctx.viewportWidth=t.width,ctx.viewportHeight=t.height)}function pathgl(t,r){return init(d3.select(t).node()),ctx?t:r}function horizontalLine(){}function verticalLine(){}function curveTo(){}function shortCurveTo(){}function quadraticBezier(){}function smoothQuadraticBezier(){}function elipticalArc(){}function group(t){var r=[];return twoEach(t,function(t,e){r.push([t,e])}),r}function parse(t){var r=addToBuffer(this);return r.length?render():(t.match(/[a-z][^a-z]*/gi).forEach(function(t,e,o){var i=methods[t[0].toLowerCase()],n=t.slice(1).trim().split(/,| /g);return[].push.apply(r.coords,group(n)),"closePath"==i.name&&o[e+1]?i.call(r,o[e+1]):(i.call?twoEach(n,i,r):console.error(i+" "+t[0]+" is not yet implemented"),void 0)}),void 0)}function moveTo(t,r){pos=[t,canv.height-r]}function closePath(t){subpathStart=pos,lineTo.apply(this,/m/i.test(t)?t.slice(1).trim().split(/,| /g):this.coords[0])}function lineTo(t,r){addLine.apply(this,pos.concat(pos=[t,canv.height-r]))}function svgDomProxy(t){return this instanceof svgDomProxy?(scene.push(this),this.tagName=t.tagName,this.id=id++,this.attr={stroke:"black",fill:"black"},void 0):new svgDomProxy(t)}function querySelector(){return querySelectorAll("query")[0]}function querySelectorAll(){return scene}function buildBuffer(t){var r=ctx.createBuffer();return ctx.bindBuffer(ctx.ARRAY_BUFFER,r),ctx.bufferData(ctx.ARRAY_BUFFER,new Float32Array(t),ctx.STATIC_DRAW),r.numItems=t.length/3,r}function drawPolygon(t){setStroke(d3.rgb(this.attr.fill)),ctx.uniform3f(program.xyz,this.attr.cx||0,this.attr.cy||0,0),ctx.bindBuffer(ctx.ARRAY_BUFFER,t),ctx.vertexAttribPointer(0,3,ctx.FLOAT,!1,0,0),ctx.drawArrays(ctx.TRIANGLE_FAN,0,t.numItems)}function circlePoints(t){for(var r=[],e=0;360>e;e+=50)r.push(50+t*Math.cos(e*Math.PI/180),50+t*Math.sin(e*Math.PI/180),0);return r}function addToBuffer(t){return extend(t.path=[],{coords:[],id:t.id})}function addLine(t,r,e,o){var i=this.push(ctx.createBuffer())-1,n=[t,r,0,e,o,0];ctx.bindBuffer(ctx.ARRAY_BUFFER,this[i]),ctx.bufferData(ctx.ARRAY_BUFFER,new Float32Array(n),ctx.STATIC_DRAW),this[i].itemSize=3,this[i].numItems=n.length/3}function drawPath(t){setStroke(d3.rgb(t.attr.stroke));for(var r=t.path,e=0;e<r.length;e++)ctx.bindBuffer(ctx.ARRAY_BUFFER,r[e]),ctx.vertexAttribPointer(program.vertexPositionLoc,r[e].itemSize,ctx.FLOAT,!1,0,0),ctx.drawArrays(ctx.LINE_STRIP,0,r[e].numItems)}function render(){rerender=!0}function setStroke(t){ctx.uniform4f(rgb,t.r/256,t.g/256,t.b/256,1)}function extend(t,r){if(arguments.length>2)[].forEach.call(arguments,function(r){extend(t,r)});else for(var e in r)t[e]=r[e];return t}function twoEach(t,r,e){1==t.length&&r.call(e);for(var o=t.length-1,i=0;o>i;)r.call(e,t[i++],t[i++])}function noop(){}function projection(t,r,e,o,i,n){var c=r-t,a=o-e,s=n-i;return[2/c,0,0,0,0,2/a,0,0,0,0,-2/s,0,(t+r)/-c,(o+e)/-a,(n+i)/-s,1]}var id=0,scene=[],pos=[],pmatrix=projection(0,innerWidth/2,0,500,-1,1),canv,ctx,program,r,g,b,rerender;this.pathgl=pathgl;var methods={m:moveTo,z:closePath,l:lineTo,h:horizontalLine,v:verticalLine,c:curveTo,s:shortCurveTo,q:quadraticBezier,t:smoothQuadraticBezier,a:elipticalArc},subpathStart,types=[];svgDomProxy.prototype={r:function(){addToBuffer(this),this.path.coords=circlePoints(this.attr.r),this.buffer=buildBuffer(this.path.coords)},cx:function(){this.buffer&&drawPolygon.call(this,this.buffer)},cy:function(){this.buffer&&drawPolygon.call(this,this.buffer)},fill:function(){"PATH"!=this.tagName&&drawPolygon.call(this,this.buffer)},d:function(t){return this.path&&extend(this.path,{coords:[],length:0}),t.match(/NaN/)?console.warn("path is invalid"):(parse.call(this,t),void 0)},stroke:function(){render()},"stroke-width":function(t){ctx.lineWidth(t)},getAttribute:function(t){return this.attr[t]},setAttribute:function(t,r){this.attr[t]=r,this[t](r)},removeAttribute:function(t){this.attr[t]=null},textContent:noop,removeEventListener:noop,addEventListener:noop};var circleProto=extend(Object.create(svgDomProxy),{r:"",cx:"",cy:""}),pathProto=extend(Object.create(svgDomProxy),{d:""}),flatten=function(t){var r=[];return t.forEach(function(t){Array.isArray(t)?[].push.apply(r,t):r.push(t)}),r};d3.timer(function(){rerender&&(ctx.clear(ctx.COLOR_BUFFER_BIT),rerender=scene.forEach(drawPath))}),pathgl.supportedAttributes=["d","stroke","strokeWidth"],pathgl.fragment=["precision mediump float;","uniform vec4 rgb;","void main(void) {","  gl_FragColor = rgb;","}"].join("\n"),pathgl.vertex=["attribute vec3 aVertexPosition;","uniform mat4 uPMatrix;","uniform vec3 xyz;","void main(void) {","  gl_Position = uPMatrix * vec4(xyz + aVertexPosition, 1.0);","}"].join("\n"),pathgl.fragment=["precision mediump float;","uniform vec4 rgb;","void main(void) {","float time = 100.0;","vec2 position = gl_FragCoord.xy / vec2(1000, 500);","float color = 0.0;","color += sin( position.x * cos( time / 15.0 ) * 80.0 ) + sin( position.y * tan( time / 15.0 ) * 10.0 );","color += sin( position.y * tan( time / 10.0 ) * 40.0 ) + sin( position.x * sin( time / 25.0 ) * 40.0 );","color += sin( position.x * sin( time / 5.0 ) * 10.0 ) + sin( position.y * sin( time / 35.0 ) * 80.0 );","color *= sin( time / 10.0 ) * 0.5;","gl_FragColor = vec4( vec3( color, color * 0.5, sin( color + cos(time / 3.0) ) * 0.75 ), 1.0 );","}"].join("\n"),d3.queue=function(t){var r=[].slice.call(arguments,1);d3.timer(function(){return t.apply(null,r),!0})};